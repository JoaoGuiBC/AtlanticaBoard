// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
  id String @id @default(uuid())

  email    String @unique
  name     String
  password String

  isAdmin Boolean @default(false)

  created_at DateTime @default(now())

  @@map("employees")
}

model Client {
  id String @id @default(uuid())

  name        String
  email       String  @unique
  contact     String?
  phoneNumber String?

  document          String? @unique
  stateRegistration String?

  address Address[]
  Budget  Budget[]

  created_at DateTime @default(now())

  @@map("clients")
}

model Address {
  id String @id @default(uuid())

  street   String
  number   Int?
  state    String?
  city     String?
  district String?
  cep      String?

  clientId String?
  Client   Client? @relation(fields: [clientId], references: [id], onDelete: Cascade)

  created_at DateTime @default(now())

  @@map("adresses")
}

model Product {
  id String @id @default(uuid())

  name        String
  price       Float
  cost        Float?
  description String?

  productBudget ProductBudget[]

  created_at DateTime @default(now())

  @@map("products")
}

model ProductBudget {
  id String @id @default(uuid())

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  base   Float
  height Float
  price  Float

  budgetId String
  budget   Budget @relation(fields: [budgetId], references: [id], onDelete: Cascade)

  created_at DateTime @default(now())

  @@map("product_budgets")
}

model Budget {
  id           String @id @default(uuid())
  serialNumber Int    @default(autoincrement())

  clientId String
  client   Client @relation(fields: [clientId], references: [id], onDelete: Cascade)

  products ProductBudget[]

  color    String?
  deadline DateTime?
  discount Float?

  price Float @default(0)

  created_at DateTime @default(now())

  @@map("budgets")
}
